{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","avatar","src","to","id","name","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,2B,8FCcpMC,EAZI,SAACC,GAClB,OACE,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACE,qBACEH,UAAWC,IAAEG,OACbC,IAAI,8GAEN,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,WCCnCC,EATC,SAACV,GACf,OACE,sBAAKC,UAAWC,IAAES,QAAlB,UACE,qBAAKL,IAAI,gEACT,+BAAON,EAAMW,c,kDCwDJC,EAnDC,SAACZ,GACf,IAAIa,EAAQb,EAAMc,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYT,KAAMS,EAAET,KAAiBD,GAAIU,EAAEV,IAAZU,EAAEV,OAE/BW,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASV,QAASU,EAAEV,SAAcU,EAAEb,OAOlCc,EAAcC,YAAiB,IAoB7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACzB,GACtB,OACE,uBAAM2B,SAAU3B,EAAM4B,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBb,KAAK,iBACLyB,YAAY,yBAGhB,8BACE,0DAUR,OACE,sBAAKjC,UAAWC,IAAEc,QAAlB,UACE,qBAAKf,UAAWC,IAAEiC,aAAlB,SAAiCpB,IACjC,gCACE,qBAAKd,UAAWC,IAAEkB,SAAlB,SAA6BD,IAC7B,8BACE,cAACK,EAAD,CAAqBG,SAlCT,SAACS,GACnBpC,EAAMqC,YAAYD,EAAOE,4B,8CClBzBC,EAA6B,SAAC1B,GAAD,MAAY,CAC3C2B,OAAQ3B,EAAM4B,KAAKD,S,QCeNE,sBACbC,aAfsB,SAAC9B,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAAC8B,GAC1B,MAAO,CACLP,YADK,SACOC,GACVM,EAASC,YAAyBP,UDPR,SAACQ,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKhD,MAAMwC,OACT,cAACM,EAAD,eAAeE,KAAKhD,QADI,cAAC,IAAD,CAAUO,GAAG,eAHH,GACb0C,IAAMH,WAWtC,OAJqCH,YAAQJ,EAARI,CACnCI,KCGWL,CAGb9B","file":"static/js/4.2fcc281b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2hcsn\",\"dialogsItems\":\"Dialogs_dialogsItems__20-0U\",\"active\":\"Dialogs_active__1ndwr\",\"messages\":\"Dialogs_messages__1qf8w\",\"avatar\":\"Dialogs_avatar__3V-Gy\",\"message\":\"Dialogs_message__20Xfl\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <img\r\n        className={s.avatar}\r\n        src=\"https://w-dog.ru/wallpapers/4/18/418634948604268/dzhared-leto-muzykant-shhetina-ochki-kapyushon-palto.jpg\"\r\n      />\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      <img src=\"https://templates.cms-guide.com/37219/images/background.jpg\" />\r\n      <span>{props.message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"./../../common/FormsContols/FormsControls\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"./../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n  };\r\n\r\n  let maxLength50 = maxLengthCreator(50);\r\n\r\n  const AddMessageForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={Textarea}\r\n            validate={[required, maxLength50]}\r\n            name=\"newMessageText\"\r\n            placeholder=\"Enter your message\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>Send Message</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n    AddMessageForm\r\n  );\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div>\r\n        <div className={s.messages}>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { sendMessageActionCreator } from \"./../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage(newMessageText) {\r\n      dispatch(sendMessageActionCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}